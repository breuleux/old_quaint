;; AUTO-GENERATED FILE
;; Can generate with the following command at root of quaint source tree:
;; python3 goodies/emacs/gendata.py goodies/emacs/quaint-data.el



;; Characters in category id_lead
(setq quaint-id-lead-characters '(
     "a"
     "b"
     "c"
     "d"
     "e"
     "f"
     "g"
     "h"
     "i"
     "j"
     "k"
     "l"
     "m"
     "n"
     "o"
     "p"
     "q"
     "r"
     "s"
     "t"
     "u"
     "v"
     "w"
     "x"
     "y"
     "z"
     "A"
     "B"
     "C"
     "D"
     "E"
     "F"
     "G"
     "H"
     "I"
     "J"
     "K"
     "L"
     "M"
     "N"
     "O"
     "P"
     "Q"
     "R"
     "S"
     "T"
     "U"
     "V"
     "W"
     "X"
     "Y"
     "Z"
     "_"
     "`a'`" "`aac`" "`aacute`"
     "`e'`" "`eac`" "`eacute`"
     "`i'`" "`iac`" "`iacute`"
     "`o'`" "`oac`" "`oacute`"
     "`u'`" "`uac`" "`uacute`"
     "`y'`" "`yac`" "`yacute`"
     "`A'`" "`Aac`" "`Aacute`"
     "`E'`" "`Eac`" "`Eacute`"
     "`I'`" "`Iac`" "`Iacute`"
     "`O'`" "`Oac`" "`Oacute`"
     "`U'`" "`Uac`" "`Uacute`"
     "`Y'`" "`Yac`" "`Yacute`"
     "`a\\`" "`agr`" "`agrave`"
     "`e\\`" "`egr`" "`egrave`"
     "`i\\`" "`igr`" "`igrave`"
     "`o\\`" "`ogr`" "`ograve`"
     "`u\\`" "`ugr`" "`ugrave`"
     "`A\\`" "`Agr`" "`Agrave`"
     "`E\\`" "`Egr`" "`Egrave`"
     "`I\\`" "`Igr`" "`Igrave`"
     "`O\\`" "`Ogr`" "`Ograve`"
     "`U\\`" "`Ugr`" "`Ugrave`"
     "`a^`" "`aci`" "`acirc`"
     "`e^`" "`eci`" "`ecirc`"
     "`i^`" "`ici`" "`icirc`"
     "`o^`" "`oci`" "`ocirc`"
     "`u^`" "`uci`" "`ucirc`"
     "`A^`" "`Aci`" "`Acirc`"
     "`E^`" "`Eci`" "`Ecirc`"
     "`I^`" "`Ici`" "`Icirc`"
     "`O^`" "`Oci`" "`Ocirc`"
     "`U^`" "`Uci`" "`Ucirc`"
     "`a\"`" "`aum`" "`auml`"
     "`e\"`" "`eum`" "`euml`"
     "`i\"`" "`ium`" "`iuml`"
     "`o\"`" "`oum`" "`ouml`"
     "`u\"`" "`uum`" "`uuml`"
     "`y\"`" "`yum`" "`yuml`"
     "`A\"`" "`Aum`" "`Auml`"
     "`E\"`" "`Eum`" "`Euml`"
     "`I\"`" "`Ium`" "`Iuml`"
     "`O\"`" "`Oum`" "`Ouml`"
     "`U\"`" "`Uum`" "`Uuml`"
     "`Y\"`" "`Yum`" "`Yuml`"
     "`ati`" "`atilde`" "`a~`"
     "`nti`" "`ntilde`" "`n~`"
     "`oti`" "`otilde`" "`o~`"
     "`Ati`" "`Atilde`" "`A~`"
     "`Nti`" "`Ntilde`" "`N~`"
     "`Oti`" "`Otilde`" "`O~`"
     "`aring`"
     "`Aring`"
     "`alpha`"
     "`beta`"
     "`gamma`"
     "`delta`"
     "`epsilon`"
     "`zeta`"
     "`eta`"
     "`theta`"
     "`lambda`"
     "`mu`"
     "`xi`"
     "`pi`"
     "`sigma`"
     "`tau`"
     "`phi`"
     "`chi`"
     "`psi`"
     "`omega`"
     "`Gamma`"
     "`Delta`"
     "`Theta`"
     "`Lambda`"
     "`Xi`"
     "`Pi`"
     "`Sigma`"
     "`Phi`"
     "`Psi`"
     "`Omega`"
     "`dagger`"
     "`eth`"
     "`ae`" "`aelig`"
     "`oe`" "`oelig`"
     "`cc`" "`ccedil`"
     "`scaron`"
     "`thorn`"
     "`oslash`"
     "`Dagger`"
     "`ETH`"
     "`AE`" "`AElig`"
     "`OE`" "`OElig`"
     "`Cc`" "`Ccedil`"
     "`Scaron`"
     "`THORN`"
     "`Oslash`"
     "`deg`" "`degree`"
     "`infin`" "`infinity`" "`infty`"
     "`empty`"
))


;; Characters in category id
(setq quaint-id-characters '(
     "a"
     "b"
     "c"
     "d"
     "e"
     "f"
     "g"
     "h"
     "i"
     "j"
     "k"
     "l"
     "m"
     "n"
     "o"
     "p"
     "q"
     "r"
     "s"
     "t"
     "u"
     "v"
     "w"
     "x"
     "y"
     "z"
     "A"
     "B"
     "C"
     "D"
     "E"
     "F"
     "G"
     "H"
     "I"
     "J"
     "K"
     "L"
     "M"
     "N"
     "O"
     "P"
     "Q"
     "R"
     "S"
     "T"
     "U"
     "V"
     "W"
     "X"
     "Y"
     "Z"
     "_"
     "`a'`" "`aac`" "`aacute`"
     "`e'`" "`eac`" "`eacute`"
     "`i'`" "`iac`" "`iacute`"
     "`o'`" "`oac`" "`oacute`"
     "`u'`" "`uac`" "`uacute`"
     "`y'`" "`yac`" "`yacute`"
     "`A'`" "`Aac`" "`Aacute`"
     "`E'`" "`Eac`" "`Eacute`"
     "`I'`" "`Iac`" "`Iacute`"
     "`O'`" "`Oac`" "`Oacute`"
     "`U'`" "`Uac`" "`Uacute`"
     "`Y'`" "`Yac`" "`Yacute`"
     "`a\\`" "`agr`" "`agrave`"
     "`e\\`" "`egr`" "`egrave`"
     "`i\\`" "`igr`" "`igrave`"
     "`o\\`" "`ogr`" "`ograve`"
     "`u\\`" "`ugr`" "`ugrave`"
     "`A\\`" "`Agr`" "`Agrave`"
     "`E\\`" "`Egr`" "`Egrave`"
     "`I\\`" "`Igr`" "`Igrave`"
     "`O\\`" "`Ogr`" "`Ograve`"
     "`U\\`" "`Ugr`" "`Ugrave`"
     "`a^`" "`aci`" "`acirc`"
     "`e^`" "`eci`" "`ecirc`"
     "`i^`" "`ici`" "`icirc`"
     "`o^`" "`oci`" "`ocirc`"
     "`u^`" "`uci`" "`ucirc`"
     "`A^`" "`Aci`" "`Acirc`"
     "`E^`" "`Eci`" "`Ecirc`"
     "`I^`" "`Ici`" "`Icirc`"
     "`O^`" "`Oci`" "`Ocirc`"
     "`U^`" "`Uci`" "`Ucirc`"
     "`a\"`" "`aum`" "`auml`"
     "`e\"`" "`eum`" "`euml`"
     "`i\"`" "`ium`" "`iuml`"
     "`o\"`" "`oum`" "`ouml`"
     "`u\"`" "`uum`" "`uuml`"
     "`y\"`" "`yum`" "`yuml`"
     "`A\"`" "`Aum`" "`Auml`"
     "`E\"`" "`Eum`" "`Euml`"
     "`I\"`" "`Ium`" "`Iuml`"
     "`O\"`" "`Oum`" "`Ouml`"
     "`U\"`" "`Uum`" "`Uuml`"
     "`Y\"`" "`Yum`" "`Yuml`"
     "`ati`" "`atilde`" "`a~`"
     "`nti`" "`ntilde`" "`n~`"
     "`oti`" "`otilde`" "`o~`"
     "`Ati`" "`Atilde`" "`A~`"
     "`Nti`" "`Ntilde`" "`N~`"
     "`Oti`" "`Otilde`" "`O~`"
     "`aring`"
     "`Aring`"
     "`alpha`"
     "`beta`"
     "`gamma`"
     "`delta`"
     "`epsilon`"
     "`zeta`"
     "`eta`"
     "`theta`"
     "`lambda`"
     "`mu`"
     "`xi`"
     "`pi`"
     "`sigma`"
     "`tau`"
     "`phi`"
     "`chi`"
     "`psi`"
     "`omega`"
     "`Gamma`"
     "`Delta`"
     "`Theta`"
     "`Lambda`"
     "`Xi`"
     "`Pi`"
     "`Sigma`"
     "`Phi`"
     "`Psi`"
     "`Omega`"
     "`dagger`"
     "`eth`"
     "`ae`" "`aelig`"
     "`oe`" "`oelig`"
     "`cc`" "`ccedil`"
     "`scaron`"
     "`thorn`"
     "`oslash`"
     "`Dagger`"
     "`ETH`"
     "`AE`" "`AElig`"
     "`OE`" "`OElig`"
     "`Cc`" "`Ccedil`"
     "`Scaron`"
     "`THORN`"
     "`Oslash`"
     "`deg`" "`degree`"
     "`infin`" "`infinity`" "`infty`"
     "`empty`"
     "0"
     "1"
     "2"
     "3"
     "4"
     "5"
     "6"
     "7"
     "8"
     "9"
))


;; Characters in category c1op
(setq quaint-c1op-characters '(
     "."
     "@"
     "$"
     "#"
))


;; Characters in category c2op
(setq quaint-c2op-characters '(
     "+"
     "-" "`-`"
     "*"
     "/" "`/`"
     "`~`" "~"
     "^"
     "<" "`<`"
     ">" "`>`"
     "=" "`=`"
     ":"
     "?"
     "!"
     "%"
     "`cup`" "`union`"
     "`cap`" "`intersection`"
     "`sub`" "`subset`"
     "`sube`" "`subseteq`"
     "`sup`" "`supset`"
     "`supe`" "`supseteq`"
     "`in`" "`isin`"
     "`notin`"
     "`after`" "`circle`"
     "`clockw`" "`clockwise`" "`cw`"
     "`cclockw`" "`ccw`" "`counterclockwise`"
     "`heart`" "`hearts`"
     "`spade`" "`spades`"
     "`club`" "`clubs`"
     "`to`"
     "<>" "`diamond`" "`diamonds`" "`diams`"
     "=<" "`le`"
     ">=" "`ge`"
     "->" "`rarr`" "`right`"
     "`asymp`" "~~"
     "`cong`" "~="
     "/=" "`ne`"
     ":"
     "&" "`amp`"
     "`|`" "|"
     "`and`" "`wedge`"
     "`or`" "`vee`"
     "`not`"
     "`nand`"
     "`nor`"
     "`xor`"
     "`gradient`" "`nabla`"
     "`int`" "`integral`"
     "<-" "`larr`" "`left`"
     "->" "`rarr`" "`right`"
     "<=" "`Left`" "`lArr`"
     "=>" "`Right`" "`rArr`"
))


;; Characters in category list_sep
(setq quaint-list-sep-characters '(
     ","
     ";"
))

